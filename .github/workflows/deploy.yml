name: Provision and Configure EC2

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action to perform"
        required: true
        default: apply
        type: choice
        options:
          - apply
          - destroy

jobs:
  provision:
    name: Terraform + Ansible
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./Terraform

      - name: Terraform Apply or Destroy
        run: |
          if [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi
        working-directory: ./Terraform

      - name: Get EC2 Public IP from Terraform output
        if: ${{ github.event.inputs.action == 'apply' }}
        id: get_ip
        run: |
          cd ./Terraform
          echo "EC2_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV

      - name: Wait for EC2 to Boot
        if: ${{ github.event.inputs.action == 'apply' }}
        run: sleep 90

      - name: Install Ansible
        if: ${{ github.event.inputs.action == 'apply' }}
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Add SSH Private Key from Secret
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ./Terraform/ubuntu_vm.pem
          chmod 600 ./Terraform/ubuntu_vm.pem

      - name: Create Ansible Inventory
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          echo "[web]" > inventory.ini
          echo "$EC2_IP ansible_user=${{ secrets.EC2_SSH_USER }} ansible_ssh_private_key_file=./Terraform/ubuntu_vm.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'" >> inventory.ini

      - name: Run Ansible Playbook
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          ansible-playbook -i inventory.ini ./Ansible/playbook.yml
